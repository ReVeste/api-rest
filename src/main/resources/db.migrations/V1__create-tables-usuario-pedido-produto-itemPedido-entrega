CREATE TABLE usuario (
idUsuario INT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(50) NOT NULL,
CPF CHAR(14) NOT NULL,
telefone CHAR(15),
dataNascimento DATE,
email VARCHAR(80) NOT NULL,
senha VARCHAR(200) NOT NULL,
tipoUsuario VARCHAR(30) NOT NULL,

CONSTRAINT chk_tipo_usuario CHECK (tipo_usuario IN ('CLIENTE', 'FUNCIONARIO', "ADMIN", "TECNICO"))
);

CREATE TABLE endereco (
idEndereco INT PRIMARY KEY AUTO_INCREMENT,
cep CHAR(9) NOT NULL,
rua VARCHAR(80) NOT NULL,
numero INT NOT NULL,
complemento VARCHAR(200),
bairro VARCHAR(80),
cidade VARCHAR(50),
uf CHAR(2),
fkUsuario INT,

CONSTRAINT fk_usuario FOREIGN KEY (fkUsuario) REFERENCES usuario(idUsuario)
);

CREATE TABLE entrega(
idEntrega INT PRIMARY KEY AUTO_INCREMENT,
codigoEntrega VARCHAR(30),
previstoPara DATETIME,
statusEntrega VARCHAR(40),
codigoPedido VARCHAR(40),
fkEndereco INT,

CONSTRAINT fk_endereco FOREIGN KEY (fkEndereco) REFERENCES endereco(idEndereco)
);

CREATE TABLE pedido(
idPedido INT PRIMARY KEY AUTO_INCREMENT,
dataHoraPedido DATETIME,
valorTotal DOUBLE,
statusPedido VARCHAR(50),
fkUsuario INT,
fkEntrega INT,

CONSTRAINT usuario_fk FOREIGN KEY (fkUsuario) REFERENCES usuario(idUsuario),
CONSTRAINT fk_entrega FOREIGN KEY (fkEntrega) REFERENCES entrega(idEntrega)
);

CREATE TABLE produto(
idProduto INT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(100),
cor VARCHAR(30),
tipo VARCHAR(50),
categoria VARCHAR(100),
tamanho VARCHAR(20),
descrição TEXT,
urlImagem VARCHAR(500),
quantidadeEstoque INT
);

CREATE TABLE itemPedido(
fkPedido INT,
fkProduto INT,
quantidade INT,
subTotal DOUBLE,

PRIMARY KEY (fkPedido, fkProduto),
FOREIGN KEY (fkPedido) REFERENCES pedido(idPedido),
FOREIGN KEY (fkProduto) REFERENCES produto(idProduto)
);